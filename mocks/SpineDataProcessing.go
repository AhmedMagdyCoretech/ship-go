// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// SpineDataProcessing is an autogenerated mock type for the SpineDataProcessing type
type SpineDataProcessing struct {
	mock.Mock
}

type SpineDataProcessing_Expecter struct {
	mock *mock.Mock
}

func (_m *SpineDataProcessing) EXPECT() *SpineDataProcessing_Expecter {
	return &SpineDataProcessing_Expecter{mock: &_m.Mock}
}

// HandleIncomingSpineMesssage provides a mock function with given fields: message
func (_m *SpineDataProcessing) HandleIncomingSpineMesssage(message []byte) {
	_m.Called(message)
}

// SpineDataProcessing_HandleIncomingSpineMesssage_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HandleIncomingSpineMesssage'
type SpineDataProcessing_HandleIncomingSpineMesssage_Call struct {
	*mock.Call
}

// HandleIncomingSpineMesssage is a helper method to define mock.On call
//   - message []byte
func (_e *SpineDataProcessing_Expecter) HandleIncomingSpineMesssage(message interface{}) *SpineDataProcessing_HandleIncomingSpineMesssage_Call {
	return &SpineDataProcessing_HandleIncomingSpineMesssage_Call{Call: _e.mock.On("HandleIncomingSpineMesssage", message)}
}

func (_c *SpineDataProcessing_HandleIncomingSpineMesssage_Call) Run(run func(message []byte)) *SpineDataProcessing_HandleIncomingSpineMesssage_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte))
	})
	return _c
}

func (_c *SpineDataProcessing_HandleIncomingSpineMesssage_Call) Return() *SpineDataProcessing_HandleIncomingSpineMesssage_Call {
	_c.Call.Return()
	return _c
}

func (_c *SpineDataProcessing_HandleIncomingSpineMesssage_Call) RunAndReturn(run func([]byte)) *SpineDataProcessing_HandleIncomingSpineMesssage_Call {
	_c.Call.Return(run)
	return _c
}

// NewSpineDataProcessing creates a new instance of SpineDataProcessing. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSpineDataProcessing(t interface {
	mock.TestingT
	Cleanup(func())
}) *SpineDataProcessing {
	mock := &SpineDataProcessing{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
