// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	api "github.com/enbility/ship-go/api"
	mock "github.com/stretchr/testify/mock"
)

// MdnsSearch is an autogenerated mock type for the MdnsSearch type
type MdnsSearch struct {
	mock.Mock
}

type MdnsSearch_Expecter struct {
	mock *mock.Mock
}

func (_m *MdnsSearch) EXPECT() *MdnsSearch_Expecter {
	return &MdnsSearch_Expecter{mock: &_m.Mock}
}

// ReportMdnsEntries provides a mock function with given fields: entries
func (_m *MdnsSearch) ReportMdnsEntries(entries map[string]*api.MdnsEntry) {
	_m.Called(entries)
}

// MdnsSearch_ReportMdnsEntries_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReportMdnsEntries'
type MdnsSearch_ReportMdnsEntries_Call struct {
	*mock.Call
}

// ReportMdnsEntries is a helper method to define mock.On call
//   - entries map[string]*api.MdnsEntry
func (_e *MdnsSearch_Expecter) ReportMdnsEntries(entries interface{}) *MdnsSearch_ReportMdnsEntries_Call {
	return &MdnsSearch_ReportMdnsEntries_Call{Call: _e.mock.On("ReportMdnsEntries", entries)}
}

func (_c *MdnsSearch_ReportMdnsEntries_Call) Run(run func(entries map[string]*api.MdnsEntry)) *MdnsSearch_ReportMdnsEntries_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(map[string]*api.MdnsEntry))
	})
	return _c
}

func (_c *MdnsSearch_ReportMdnsEntries_Call) Return() *MdnsSearch_ReportMdnsEntries_Call {
	_c.Call.Return()
	return _c
}

func (_c *MdnsSearch_ReportMdnsEntries_Call) RunAndReturn(run func(map[string]*api.MdnsEntry)) *MdnsSearch_ReportMdnsEntries_Call {
	_c.Call.Return(run)
	return _c
}

// NewMdnsSearch creates a new instance of MdnsSearch. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMdnsSearch(t interface {
	mock.TestingT
	Cleanup(func())
}) *MdnsSearch {
	mock := &MdnsSearch{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
