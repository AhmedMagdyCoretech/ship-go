// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	api "github.com/enbility/ship-go/api"
	mock "github.com/stretchr/testify/mock"
)

// MdnsService is an autogenerated mock type for the MdnsService type
type MdnsService struct {
	mock.Mock
}

type MdnsService_Expecter struct {
	mock *mock.Mock
}

func (_m *MdnsService) EXPECT() *MdnsService_Expecter {
	return &MdnsService_Expecter{mock: &_m.Mock}
}

// AnnounceMdnsEntry provides a mock function with given fields:
func (_m *MdnsService) AnnounceMdnsEntry() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for AnnounceMdnsEntry")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MdnsService_AnnounceMdnsEntry_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AnnounceMdnsEntry'
type MdnsService_AnnounceMdnsEntry_Call struct {
	*mock.Call
}

// AnnounceMdnsEntry is a helper method to define mock.On call
func (_e *MdnsService_Expecter) AnnounceMdnsEntry() *MdnsService_AnnounceMdnsEntry_Call {
	return &MdnsService_AnnounceMdnsEntry_Call{Call: _e.mock.On("AnnounceMdnsEntry")}
}

func (_c *MdnsService_AnnounceMdnsEntry_Call) Run(run func()) *MdnsService_AnnounceMdnsEntry_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MdnsService_AnnounceMdnsEntry_Call) Return(_a0 error) *MdnsService_AnnounceMdnsEntry_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MdnsService_AnnounceMdnsEntry_Call) RunAndReturn(run func() error) *MdnsService_AnnounceMdnsEntry_Call {
	_c.Call.Return(run)
	return _c
}

// RegisterMdnsSearch provides a mock function with given fields: cb
func (_m *MdnsService) RegisterMdnsSearch(cb api.MdnsSearch) {
	_m.Called(cb)
}

// MdnsService_RegisterMdnsSearch_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RegisterMdnsSearch'
type MdnsService_RegisterMdnsSearch_Call struct {
	*mock.Call
}

// RegisterMdnsSearch is a helper method to define mock.On call
//   - cb api.MdnsSearch
func (_e *MdnsService_Expecter) RegisterMdnsSearch(cb interface{}) *MdnsService_RegisterMdnsSearch_Call {
	return &MdnsService_RegisterMdnsSearch_Call{Call: _e.mock.On("RegisterMdnsSearch", cb)}
}

func (_c *MdnsService_RegisterMdnsSearch_Call) Run(run func(cb api.MdnsSearch)) *MdnsService_RegisterMdnsSearch_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(api.MdnsSearch))
	})
	return _c
}

func (_c *MdnsService_RegisterMdnsSearch_Call) Return() *MdnsService_RegisterMdnsSearch_Call {
	_c.Call.Return()
	return _c
}

func (_c *MdnsService_RegisterMdnsSearch_Call) RunAndReturn(run func(api.MdnsSearch)) *MdnsService_RegisterMdnsSearch_Call {
	_c.Call.Return(run)
	return _c
}

// SetAutoAccept provides a mock function with given fields: _a0
func (_m *MdnsService) SetAutoAccept(_a0 bool) {
	_m.Called(_a0)
}

// MdnsService_SetAutoAccept_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetAutoAccept'
type MdnsService_SetAutoAccept_Call struct {
	*mock.Call
}

// SetAutoAccept is a helper method to define mock.On call
//   - _a0 bool
func (_e *MdnsService_Expecter) SetAutoAccept(_a0 interface{}) *MdnsService_SetAutoAccept_Call {
	return &MdnsService_SetAutoAccept_Call{Call: _e.mock.On("SetAutoAccept", _a0)}
}

func (_c *MdnsService_SetAutoAccept_Call) Run(run func(_a0 bool)) *MdnsService_SetAutoAccept_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(bool))
	})
	return _c
}

func (_c *MdnsService_SetAutoAccept_Call) Return() *MdnsService_SetAutoAccept_Call {
	_c.Call.Return()
	return _c
}

func (_c *MdnsService_SetAutoAccept_Call) RunAndReturn(run func(bool)) *MdnsService_SetAutoAccept_Call {
	_c.Call.Return(run)
	return _c
}

// SetupMdnsService provides a mock function with given fields:
func (_m *MdnsService) SetupMdnsService() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for SetupMdnsService")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MdnsService_SetupMdnsService_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetupMdnsService'
type MdnsService_SetupMdnsService_Call struct {
	*mock.Call
}

// SetupMdnsService is a helper method to define mock.On call
func (_e *MdnsService_Expecter) SetupMdnsService() *MdnsService_SetupMdnsService_Call {
	return &MdnsService_SetupMdnsService_Call{Call: _e.mock.On("SetupMdnsService")}
}

func (_c *MdnsService_SetupMdnsService_Call) Run(run func()) *MdnsService_SetupMdnsService_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MdnsService_SetupMdnsService_Call) Return(_a0 error) *MdnsService_SetupMdnsService_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MdnsService_SetupMdnsService_Call) RunAndReturn(run func() error) *MdnsService_SetupMdnsService_Call {
	_c.Call.Return(run)
	return _c
}

// ShutdownMdnsService provides a mock function with given fields:
func (_m *MdnsService) ShutdownMdnsService() {
	_m.Called()
}

// MdnsService_ShutdownMdnsService_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ShutdownMdnsService'
type MdnsService_ShutdownMdnsService_Call struct {
	*mock.Call
}

// ShutdownMdnsService is a helper method to define mock.On call
func (_e *MdnsService_Expecter) ShutdownMdnsService() *MdnsService_ShutdownMdnsService_Call {
	return &MdnsService_ShutdownMdnsService_Call{Call: _e.mock.On("ShutdownMdnsService")}
}

func (_c *MdnsService_ShutdownMdnsService_Call) Run(run func()) *MdnsService_ShutdownMdnsService_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MdnsService_ShutdownMdnsService_Call) Return() *MdnsService_ShutdownMdnsService_Call {
	_c.Call.Return()
	return _c
}

func (_c *MdnsService_ShutdownMdnsService_Call) RunAndReturn(run func()) *MdnsService_ShutdownMdnsService_Call {
	_c.Call.Return(run)
	return _c
}

// UnannounceMdnsEntry provides a mock function with given fields:
func (_m *MdnsService) UnannounceMdnsEntry() {
	_m.Called()
}

// MdnsService_UnannounceMdnsEntry_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UnannounceMdnsEntry'
type MdnsService_UnannounceMdnsEntry_Call struct {
	*mock.Call
}

// UnannounceMdnsEntry is a helper method to define mock.On call
func (_e *MdnsService_Expecter) UnannounceMdnsEntry() *MdnsService_UnannounceMdnsEntry_Call {
	return &MdnsService_UnannounceMdnsEntry_Call{Call: _e.mock.On("UnannounceMdnsEntry")}
}

func (_c *MdnsService_UnannounceMdnsEntry_Call) Run(run func()) *MdnsService_UnannounceMdnsEntry_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MdnsService_UnannounceMdnsEntry_Call) Return() *MdnsService_UnannounceMdnsEntry_Call {
	_c.Call.Return()
	return _c
}

func (_c *MdnsService_UnannounceMdnsEntry_Call) RunAndReturn(run func()) *MdnsService_UnannounceMdnsEntry_Call {
	_c.Call.Return(run)
	return _c
}

// UnregisterMdnsSearch provides a mock function with given fields: cb
func (_m *MdnsService) UnregisterMdnsSearch(cb api.MdnsSearch) {
	_m.Called(cb)
}

// MdnsService_UnregisterMdnsSearch_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UnregisterMdnsSearch'
type MdnsService_UnregisterMdnsSearch_Call struct {
	*mock.Call
}

// UnregisterMdnsSearch is a helper method to define mock.On call
//   - cb api.MdnsSearch
func (_e *MdnsService_Expecter) UnregisterMdnsSearch(cb interface{}) *MdnsService_UnregisterMdnsSearch_Call {
	return &MdnsService_UnregisterMdnsSearch_Call{Call: _e.mock.On("UnregisterMdnsSearch", cb)}
}

func (_c *MdnsService_UnregisterMdnsSearch_Call) Run(run func(cb api.MdnsSearch)) *MdnsService_UnregisterMdnsSearch_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(api.MdnsSearch))
	})
	return _c
}

func (_c *MdnsService_UnregisterMdnsSearch_Call) Return() *MdnsService_UnregisterMdnsSearch_Call {
	_c.Call.Return()
	return _c
}

func (_c *MdnsService_UnregisterMdnsSearch_Call) RunAndReturn(run func(api.MdnsSearch)) *MdnsService_UnregisterMdnsSearch_Call {
	_c.Call.Return(run)
	return _c
}

// NewMdnsService creates a new instance of MdnsService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMdnsService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MdnsService {
	mock := &MdnsService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
